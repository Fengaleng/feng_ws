#! /usr/bin/env python

PACKAGE='attitude_control'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

ENABLE_CTRL      = gen.const("ENABLE_CTRL",      int_t, 0x00000001, "enable_ctrl")
#NEW_REFERENCES   = gen.const("NEW_REFERENCES",   int_t, 0x00000002, "new_references")
NEW_PARAMETERS   = gen.const("NEW_PARAMETERS",   int_t, 0x00000004, "drone_parameter")
#CONTROLLER_GAIN  = gen.const("CONTROLLER_GAIN",  int_t, 0x00000008, "controller_gain")
#LOE              = gen.const("LOE",              int_t, 0x01000000, "lost_of_control_effectiveness")

group1 = gen.add_group("group_attitude_control")
#group2 = gen.add_group("group_waypoint_references")
#group3 = gen.add_group("group3_drone_parameters")
#group4 = gen.add_group("group_controller_gains")

#          Name                     Type      Reconfiguration level     Description                Default    Min    Max
#gen.add("RESET",                    bool_t,   0,                        "reset parameters, gains", False)

#test_mode_enum = gen.enum([ gen.const("TEST_MANUAL",     int_t, 0, "Manual test"),
#                            gen.const("TEST_WAYPOINT",   int_t, 1, "Waypoint test"),
#                            gen.const("TEST_TRACKING",   int_t, 2, "Circular tracking test")],
#                            "An enum to chose test mode")
#gen.add("test_mode", int_t, 0, "test mode", 0, 0, 2, edit_method=test_mode_enum)

#group1.add("enable_take_off",       bool_t,   ENABLE_CTRL["value"],     "enable take off",         False)                   # ENABLE_CTRL["value"] = 0x00000001
#group1.add("enable_landing",        bool_t,   ENABLE_CTRL["value"],     "enable landing",          False)
#group1.add("send_waypoint",         bool_t,   ENABLE_CTRL["value"],     "send new waypoint",       False)
group1.add("new_parameters",  bool_t,   ENABLE_CTRL["value"],     "change parameters", False)
#group1.add("new_drone_parameters",  bool_t,   ENABLE_CTRL["value"],     "change drone parameters", False)                   # to do later
#group1.add("enable_yaw",            bool_t,   ENABLE_CTRL["value"],     "enable yaw-control",      True)                    # to do later
#group1.add("enable_gohome",         bool_t,   ENABLE_CTRL["value"],     "enable go home",          False)                   # to do later

group1.add("kt",                    double_t,  NEW_PARAMETERS["value"],"k-t",                     6.0e-06,  0.0,   0.00000854858)
group1.add("kd",                    double_t,  NEW_PARAMETERS["value"],"k-d",                     3.1202e-07,  0.0,   3.1202e-07)
group1.add("Mx",                    double_t,  NEW_PARAMETERS["value"],"M-x",                     7.0,  0.0,   20)
group1.add("My",                    double_t,  NEW_PARAMETERS["value"],"M-y",                     7.0,  0.0,   20)
group1.add("Mz",                    double_t,  NEW_PARAMETERS["value"],"M-z",                     8,  0.0,   20)
#group2.add("ref_x",                 double_t,  NEW_REFERENCES["value"], "X position reference",    0.0,     -2.0,   2.0)
#group2.add("ref_y",                 double_t,  NEW_REFERENCES["value"], "Y position reference",    0.0,     -2.0,   2.0)
#group2.add("ref_z",                 double_t,  NEW_REFERENCES["value"], "Z position reference",    1.0,      0.0,   1.5)
#group2.add("ref_yaw_deg",           double_t,  NEW_REFERENCES["value"], "yaw angle reference",     0.0,     -180.0, 180.0)

#group3.add("kT",                    double_t,  NEW_PARAMETERS["value"], "thrust constant",     8.54858e-6,   1e-7,   1e-5)
#group3.add("factor",                double_t,  NEW_PARAMETERS["value"], "scaling factor",          0.035,    0.0,   0.05)

#group4.add("kz",                    double_t,  CONTROLLER_GAIN["value"],"k-z",                     10.0611,  0.0,   30.0)
#group4.add("kvz",                   double_t,  CONTROLLER_GAIN["value"],"k-zd",                    5.8796,   0.0,   20.0)
#group4.add("kiz",                   double_t,  CONTROLLER_GAIN["value"],"k-iz",                    5.7735,  0.0,   30.0)

#group4.add("kx",                    double_t,  CONTROLLER_GAIN["value"],"k-x",                     0.5190,   0.0,   2.0)
#group4.add("kvx",                   double_t,  CONTROLLER_GAIN["value"],"k-xd",                    0.3459,   0.0,   2.0)
#group4.add("kix",                   double_t,  CONTROLLER_GAIN["value"],"k-ix",                    0.3291,   0.0,   2.0)
#group4.add("ky",                    double_t,  CONTROLLER_GAIN["value"],"k-y",                     -0.5170,  -2.0,  0.0)
#group4.add("kvy",                   double_t,  CONTROLLER_GAIN["value"],"k-yd",                    -0.3442,  -2.0,  0.0)
#group4.add("kiy",                   double_t,  CONTROLLER_GAIN["value"],"k-iy",                    -0.3291,  -2.0,  0.0)

#group4.add("kx",                    double_t,  CONTROLLER_GAIN["value"],"k-x",                     1.6651,   0.0,   2.0)
#group4.add("kvx",                   double_t,  CONTROLLER_GAIN["value"],"k-xd",                    0.9236,   0.0,   2.0)
#group4.add("kix",                   double_t,  CONTROLLER_GAIN["value"],"k-ix",                    1.3486,   0.0,   2.0)
#group4.add("ky",                    double_t,  CONTROLLER_GAIN["value"],"k-y",                     -1.5145,  -2.0,  0.0)
#group4.add("kvy",                   double_t,  CONTROLLER_GAIN["value"],"k-yd",                    -0.8551,  -2.0,  0.0)
#group4.add("kiy",                   double_t,  CONTROLLER_GAIN["value"],"k-iy",                    -1.1930,  -2.0,  0.0)

#group4.add("kphi",                  double_t,  CONTROLLER_GAIN["value"],"k-phi",                   1.2703,   0.0,   10.0)
#group4.add("kp",                    double_t,  CONTROLLER_GAIN["value"],"k-p",                     0.2323,   0.0,   1.0)
#group4.add("kiphi",                 double_t,  CONTROLLER_GAIN["value"],"k-iphi",                  0.0,      0.0,   20.0)
#group4.add("ktheta",                double_t,  CONTROLLER_GAIN["value"],"k-theta",                 1.2591,   0.0,   10.0)

#group4.add("kq",                    double_t,  CONTROLLER_GAIN["value"],"k-q",                     0.2284,   0.0,   1.0)
#group4.add("kitheta",               double_t,  CONTROLLER_GAIN["value"],"k-itheta",                0.0,      0.0,   20.0)
#group4.add("kpsi",                  double_t,  CONTROLLER_GAIN["value"],"k-psi",                   0.2668,   0.0,   1.0)
#group4.add("kr",                    double_t,  CONTROLLER_GAIN["value"],"k-p",                     0.1353,   0.0,   1.0)
#group4.add("kipsi",                 double_t,  CONTROLLER_GAIN["value"],"k-ipsi",                  0.1936,   0.0,   1.0)

#group4.add("kphi",                  double_t,  CONTROLLER_GAIN["value"],"k-phi",                   2.6042,   0.0,   10.0)
#group4.add("kp",                    double_t,  CONTROLLER_GAIN["value"],"k-p",                     0.4431,   0.0,   1.0)
#group4.add("kiphi",                 double_t,  CONTROLLER_GAIN["value"],"k-iphi",                  0.0,      0.0,   20.0)
#group4.add("ktheta",                double_t,  CONTROLLER_GAIN["value"],"k-theta",                 2.8913 ,   0.0,   10.0)
#group4.add("kq",                    double_t,  CONTROLLER_GAIN["value"],"k-q",                     0.5163,   0.0,   1.0)
#group4.add("kitheta",               double_t,  CONTROLLER_GAIN["value"],"k-itheta",                0.0,      0.0,   20.0)
#group4.add("kpsi",                  double_t,  CONTROLLER_GAIN["value"],"k-psi",                   0.7660,   0.0,   1.0)
#group4.add("kr",                    double_t,  CONTROLLER_GAIN["value"],"k-p",                     0.4006,   0.0,   1.0)
#group4.add("kipsi",                 double_t,  CONTROLLER_GAIN["value"],"k-ipsi",                  0.5774,   0.0,   1.0)

#group4.add("gamma_z",                double_t,  CONTROLLER_GAIN["value"],"gamma_z",                   5.0,  0.0,  1000.0)
#group4.add("gamma_psi",              double_t,  CONTROLLER_GAIN["value"],"gamma_psi",                 0.05,  0.0,  1.0)
#group4.add("gamma_x",                double_t,  CONTROLLER_GAIN["value"],"gamma_x",                   0.25,  0.0,  10.0)
#group4.add("gamma_y",                double_t,  CONTROLLER_GAIN["value"],"gamma_y",                   0.25,  0.0,  10.0)

#group4.add("LOE",                    double_t,  CONTROLLER_GAIN["value"],"LOE",                       1.0,  0.7,  1.0) # only for LOE tests, remove afterwards.

#group4.add("sigma_x",                double_t,  CONTROLLER_GAIN["value"],"sigma_x",                   0.0,  0.0,  1.0)
#group4.add("sigma_y",                double_t,  CONTROLLER_GAIN["value"],"sigma_y",                   0.0,  0.0,  1.0)
#group4.add("sigma_z",                double_t,  CONTROLLER_GAIN["value"],"sigma_z",                   0.0,  0.0,  1.0)
#group4.add("sigma_psi",              double_t,  CONTROLLER_GAIN["value"],"sigma_psi",                 0.0,  0.0,  1.0)

exit(gen.generate(PACKAGE, "attitude_control", "controllerDynAtt"))
